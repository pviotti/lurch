#!/usr/bin/python
# analises the delay.log file generated by VLC
# for every chunk id it computes the delay

# to stdout: data for graph
# to stderr: general stats on delay

import sys
rows = sys.stdin.readlines()

stats = {}
# stats[id] = [type, time]

for r in rows:
	if stats.has_key( int(r.split()[-1]) ):
		if "Content" in r:
			stats[int(r.split()[-1])] = [float(r.split(":")[0]) - stats[int(r.split()[-1])][0], stats[int(r.split()[-1])][1] + "c"]
		elif "Interest" in r:
			stats[int(r.split()[-1])] = [stats[int(r.split()[-1])][0], stats[int(r.split()[-1])][1] + "i"]		
	else:
		stats[int(r.split()[-1])] = [float(r.split(":")[0]), "i"]

sorted_keys = stats.keys()
sorted_keys.sort()

delay = []

for s in sorted_keys:
	print >> sys.stdout, s, stats[s][0], stats[s][1]
	delay.append(stats[s][0])

# min
print >> sys.stderr, "Min:", min(delay), "s"

# max
print >> sys.stderr, "Max:", max(delay), "s"

# mean, stddev
from numpy import array
nums = array(delay)
print >> sys.stderr, "Mean:", nums.mean(axis=0), "s"
print >> sys.stderr, "StdDev:", nums.std(axis=0), "s"
